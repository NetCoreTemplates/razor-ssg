@page "/posts/author/{slug}"
@model AuthorModel
@inject MarkdownBlog Blog

@implements IRenderStatic<AuthorModel>
@functions {
    public List<AuthorModel> GetStaticProps(RenderContext ctx) => ctx.Resolve<MarkdownBlog>()
        .AuthorSlugMap.Keys.Map(x => new AuthorModel { Slug = x });
}

@{
    var author = Blog.GetAuthorBySlug(Model.Slug);
    if (author == null)
    {
        Response.Redirect("/404");
        return;
    }
    ViewData["Title"] = $"{author.Name} posts";
}

<div class="relative bg-gray-50 dark:bg-gray-900 px-6 pt-16 pb-20 lg:px-8 lg:pt-24 lg:pb-28">
    <div class="absolute inset-0">
        <div class="h-1/3 bg-white dark:bg-black sm:h-2/3"></div>
    </div>
    <div class="relative mx-auto max-w-7xl">
        @await Html.PartialAsync("BlogTitle", $"All posts written by <b>{author.Name}</b>")
    </div>
    <div class="mt-12 relative mx-auto max-w-7xl">
        @await Html.PartialAsync("BlogPosts", Blog.GetPosts(author:author.Name))

        <div class="mt-8 text-center">
            <a class="text-sm font-semibold hover:underline" href="@Blog.GetPostsLink()">view all posts</a>
        </div>
    </div>
</div>